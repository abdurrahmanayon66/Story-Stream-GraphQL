datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique @db.VarChar(255)
  fullName     String?    @db.VarChar(255)
  userBio      String?    @db.Text
  email        String     @unique @db.VarChar(255)
  password     String?    @db.VarChar(255)
  providerId   String?    @unique @db.VarChar(255)
  image        Bytes?
  profileImage String?    @db.VarChar(255)
  createdAt    DateTime   @default(now())

  blogs        Blog[]
  comments     Comment[]
  likes        Like[]
  bookmarks    Bookmark[]

  followers    Follower[] @relation("UserFollowed")
  following    Follower[] @relation("UserFollower")
}

model Follower {
  id         Int   @id @default(autoincrement())
  userId     Int
  followerId Int

  user       User  @relation("UserFollowed", fields: [userId], references: [id])
  follower   User  @relation("UserFollower", fields: [followerId], references: [id])

  @@unique([userId, followerId])
}

model Bookmark {
  id      Int   @id @default(autoincrement())
  userId  Int
  blogId  Int

  user    User  @relation(fields: [userId], references: [id])
  blog    Blog  @relation(fields: [blogId], references: [id])

  @@unique([userId, blogId])
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String   @unique @db.VarChar(255)
  slug      String   @unique @db.VarChar(255)
  description String
  content     String     @db.Text
  image     Bytes
  genre     String[]
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]
  bookmarks Bookmark[]
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id        Int      @id @default(autoincrement())
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([blogId, userId])
}
