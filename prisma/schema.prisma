datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  password     String?  @db.VarChar(255)
  providerId   String?  @unique @db.VarChar(255)
  image        Bytes?   // Optional: for regular users' uploaded images
  profileImage String?  @db.VarChar(255) // Optional: for Google users' profile picture URL
  createdAt    DateTime @default(now())
  blogs        Blog[]   // One-to-many relation with Blog
  comments     Comment[] // One-to-many relation with Comment
  likes        Like[]   // One-to-many relation with Like
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  content   Json     // Changed to Json
  image     Bytes
  genre     String[] // Added genre field as array of strings
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[] // One-to-many relation with Comment
  likes     Like[]   // One-to-many relation with Like
  createdAt DateTime @default(now())
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model Like {
  id        Int      @id @default(autoincrement())
  blogId    Int
  blog      Blog     @relation(fields: [blogId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  @@unique([blogId, userId]) // Ensure a user can only like a blog once
}